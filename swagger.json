{
  "swagger": "2.0",
  "info": {
    "description": "This is a set of simple tools for working with cuneiform numeric notations. Included are utilities for converting cuneiform numerals to Arabic notation, checking whether a string is parsable as a number, and querying the counted objects in a text.",
    "version": "1.0.0",
    "title": "CDLI Numeral Conversion"
  },
  "host": "cdli-numerals.herokuapp.com",
  "basePath": "/",
  "tags": [
    {
      "name": "convert",
      "description": "Convert Sumerian numerals to Arabic notation:"
    },
    {
      "name": "canparse",
      "description": "Test whether a string can be parsed as a numeral:"
    },
    {
      "name": "commodify",
      "description": "Find counted objects in a text:"
    }
  ],
  "paths": {
    "/convert": {
      "post": {
        "tags": [
          "convert"
        ],
        "summary": "Convert a Sumerian numeral to Arabic notation",
        "description": "",
        "operationId": "convert_post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "json",
            "description": "Request body should be a JSON object:",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "query",
                "language"
              ],
              "properties": {
                "query": {
                  "type": "string",
                  "description": "The string to convert"
                },
                "language": {
                  "type": "string",
                  "enum": [
                    "sux"
                  ],
                  "description": "The language the number comes from. Current version only supports Sumerian."
                },
                "system": {
                  "type": "string",
                  "enum": [
                    "date",
                    "cardinal",
                    "length",
                    "surface",
                    "volume",
                    "dry capacity",
                    "liquid capacity",
                    "weight",
                    "bricks"
                  ],
                  "description": "The number system to use for conversion. If none is supplied, a list of all possible conversions is returned."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Converted successfully. Returns a list of possible readings:",
            "schema": {
              "properties": {
                "readings": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Reading"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing or invalid parameter, or request is not of type application/json."
          }
        }
      }
    },
    "/canparse": {
      "post": {
        "tags": [
          "canparse"
        ],
        "summary": "Determine whether a string can be parsed as a numeral",
        "description": "",
        "operationId": "canparse_post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "json",
            "description": "Request body should be a JSON object:",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "query",
                "language"
              ],
              "properties": {
                "query": {
                  "type": "string",
                  "description": "The string to evaluate"
                },
                "language": {
                  "type": "string",
                  "enum": [
                    "sux"
                  ],
                  "description": "The language the number comes from. Current version only supports Sumerian."
                },
                "greedy": {
                  "type": "boolean",
                  "default": false,
                  "description": "Specifies whether to greedily parse missing signs. If true, broken and missing signs will be ignored, so e.g. '1(u) ... sze' will be considered a valid number."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Converted successfully. Returns a list of systems that can parse the query string:",
            "schema": {
              "properties": {
                "result": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ParseResult"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing or invalid parameter, or request is not of type application/json."
          }
        }
      }
    },
    "/commodify": {
      "post": {
        "tags": [
          "commodify"
        ],
        "summary": "Determine whether a string can be parsed as a numeral",
        "description": "",
        "operationId": "commodify_post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "json",
            "description": "Request body should be a JSON object. Either cdli_no or text is required, but not both:",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "cdli_no": {
                  "type": "string",
                  "description": "The CDLI number of a document to analyse for commodities, e.g. P100839"
                },
                "text": {
                  "type": "string",
                  "description": "A string to analyse for commodities"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of entries in the input text, with readings supplied for the numbers and counted objects annotated with '_COM':",
            "schema": {
              "$ref": "#/definitions/CommodifyResult"
            }
          },
          "400": {
            "description": "Missing or invalid parameter, or request is not of type application/json."
          }
        }
      }
    }
  },
  "definitions": {
    "Reading": {
      "type": "object",
      "properties": {
        "query": {
          "type": "string"
        },
        "system": {
          "type": "string",
          "enum": [
            "date",
            "cardinal",
            "length",
            "surface",
            "volume",
            "dry capacity",
            "liquid capacity",
            "weight",
            "bricks"
          ]
        },
        "value": {
          "type": "number"
        },
        "unit": {
          "type": "string",
          "enum": [
            "",
            "gi",
            "gin2",
            "sila3"
          ]
        },
        "modern_value": {
          "type": "number"
        },
        "modern_unit": {
          "type": "string",
          "enum": [
            "",
            "m",
            "m^2",
            "l",
            "g",
            "bricks"
          ]
        }
      },
      "xml": {
        "name": "Order"
      }
    },
    "ParseResult": {
      "type": "object",
      "properties": {
        "system": {
          "type": "string",
          "enum": [
            "date",
            "cardinal",
            "length",
            "surface",
            "volume",
            "dry capacity",
            "liquid capacity",
            "weight",
            "bricks"
          ]
        },
        "canparse": {
          "type": "boolean"
        }
      }
    },
    "CommodifyResult": {
      "type": "object",
      "properties": {
        "entries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Entry"
          }
        }
      }
    },
    "Entry": {
      "type": "object",
      "properties": {
        "count": {
          "type": "object",
          "properties": {
            "string": {
              "type": "string"
            },
            "readings": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Reading"
              }
            }
          }
        },
        "words": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    }
  }
}